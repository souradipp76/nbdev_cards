[
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "Card - A basic playing card",
    "section": "",
    "text": "We will use numbers to represent the suit and ranks of the cards. These are the suits:\nsuits\n\n['♣', '♦', '♥', '♠']\nThese are the ranks:\nranks\n\n[None, 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\nFor instance the rank at index 1 (Note: There is no playing card at position 0 since we want the ranks to match the indices.)\nranks[1]\n\n'A'\nHere is an example of creating and displaying a card:\nc = Card(suit = 1, rank = 11)\nc\n\nJ♦"
  },
  {
    "objectID": "card.html#comparison-operators",
    "href": "card.html#comparison-operators",
    "title": "Card - A basic playing card",
    "section": "Comparison Operators",
    "text": "Comparison Operators\nEquality, less than and greater than work on the rank and suit indices.\nHere is a test of equality…\n\ntest_eq(Card(suit = 1, rank = 3), Card(suit = 1, rank = 3))\n\n.. and a test of &lt; …\n.. and finally for &gt;:\n\nassert(Card(suit = 1, rank = 3) &lt; Card(suit = 2, rank = 3))\n\n\nassert (Card(suit = 3, rank = 3) &gt; Card(suit = 2, rank = 3))\nassert not (Card(suit = 1, rank = 3) &gt; Card(suit = 2, rank = 3))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev_cards",
    "section": "",
    "text": "A sample of how to create a deck of cards lib using nbdev\n\nA deck of cards demo of nbdev based on ideas from Think Python 2nd Edition by Allen B. Downey."
  },
  {
    "objectID": "index.html#nbdev_cards",
    "href": "index.html#nbdev_cards",
    "title": "nbdev_cards",
    "section": "",
    "text": "A sample of how to create a deck of cards lib using nbdev\n\nA deck of cards demo of nbdev based on ideas from Think Python 2nd Edition by Allen B. Downey."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbdev_cards",
    "section": "Install",
    "text": "Install\nInstall using:\n    pip install nbdev-cards\nor\n    conda install -c fastai nbdev-cards"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbdev_cards",
    "section": "How to use",
    "text": "How to use\nThis lib provides a Card class that you can use to create, display and compare while playing cards.\n\nsuits\n\n['♣', '♦', '♥', '♠']\n\n\n\nranks\n\n[None, 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n\n\n\nCard(1,3)\n\n3♦"
  },
  {
    "objectID": "deck.html",
    "href": "deck.html",
    "title": "Deck",
    "section": "",
    "text": "source\n\nDeck\n\n Deck ()\n\nA deck of cards not including jokers\nWhen we initially create a deck, all of the cards will be present:\n\ndeck = Deck()\ndeck\n\nA♣; 2♣; 3♣; 4♣; 5♣; 6♣; 7♣; 8♣; 9♣; 10♣; J♣; Q♣; K♣; A♦; 2♦; 3♦; 4♦; 5♦; 6♦; 7♦; 8♦; 9♦; 10♦; J♦; Q♦; K♦; A♥; 2♥; 3♥; 4♥; 5♥; 6♥; 7♥; 8♥; 9♥; 10♥; J♥; Q♥; K♥; A♠; 2♠; 3♠; 4♠; 5♠; 6♠; 7♠; 8♠; 9♠; 10♠; J♠; Q♠; K♠\n\n\nThat will be 52 cards.\n\ntest_eq(len(deck), 52)\n\nAs a reminder, these are the suits defined in Card:\n\nsuits\n\n['♣', '♦', '♥', '♠']\n\n\nWe can check if the Ace of clubs is in the deck\n\nCard(1,1) in deck\n\nTrue\n\n\n\nsource\n\n\nDeck.pop\n\n Deck.pop (idx:int=-1)\n\nRemove one card from the deck\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nidx\nint\n-1\nThe index of the card to remove, defaulting to the last one\n\n\n\n\ndeck = Deck()\ntest_eq(deck.pop(), Card(3, 13)) # K♠\n\nThere are 51 cards left in the deck now.\n\ntest_eq(len(deck), 51)\n\n\nsource\n\n\nDeck.remove\n\n Deck.remove (card:nbdev_cards.card.Card)\n\nRemove card from the deck or raise exception if not present\n\n\n\n\nType\nDetails\n\n\n\n\ncard\nCard\nThe card to remove\n\n\n\n\ndeck = Deck()\ncard23 = Card(2,3)\ndeck.remove(card23)\nassert card23 not in deck\n\n\nsource\n\n\nDeck.shuffle\n\n Deck.shuffle ()\n\nShuffle the cards in a deck\n\nsource\n\n\ndraw_n\n\n draw_n (n:int, replace:bool=True)\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nn\nint\n\nNumber of cards to draw\n\n\nreplace\nbool\nTrue\nwhether or not to draw with replacement\n\n\n\nExample to draw n cards:\n\ndraw_n(12, replace=False)\n\n[8♣, 8♥, 3♦, 6♦, 10♣, 5♥, 2♦, 4♦, Q♣, 2♥, 9♥, K♥]"
  }
]